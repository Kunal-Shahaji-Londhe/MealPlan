{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Kunal Londhe\\\\OneDrive\\\\\\u30C9\\u30AD\\u30E5\\u30E1\\u30F3\\u30C8\\\\Development\\\\Web Development\\\\Frontend\\\\meal-planner\\\\Frontend\\\\src\\\\Login.jsx\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport axios from 'axios';\nimport { useNavigate } from 'react-router-dom'; // Replace useHistory with useNavigate\nimport { useUser } from './userContext';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Login = () => {\n  _s();\n  const [username, setUsername] = useState('');\n  const [password, setPassword] = useState('');\n  const [error, setError] = useState(null);\n  const {\n    SetUsername\n  } = useUser();\n\n  // Use the useNavigate hook to access navigation\n  const navigate = useNavigate();\n  const handleLogin = async () => {\n    try {\n      const response = await axios.post('http://localhost:3000/login', {\n        username,\n        password\n      });\n      const token = response.data.token;\n      if (token) {\n        // Store the token securely (e.g., in a cookie or local storage) for future API requests.\n        localStorage.setItem('token', token);\n        SetUsername(username);\n        // Redirect the user to the authenticated part of your app (e.g., the meal planner)\n        navigate('/meal-app'); // Use navigate instead of history.push\n      }\n    } catch (error) {\n      // Handle login error\n      setError('Login failed. Please check your credentials and try again.');\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"signin-card\",\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      className: \"nav-text\",\n      children: \"Login\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 37,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"section\", {\n      className: \"input\",\n      children: [/*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        placeholder: \"\\uD83D\\uDC68\\u200D\\uD83D\\uDCBB: Username\",\n        onChange: e => setUsername(e.target.value)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 39,\n        columnNumber: 7\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"password\",\n        placeholder: \"\\uD83D\\uDD11: Password\",\n        onChange: e => setPassword(e.target.value)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 40,\n        columnNumber: 7\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 38,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      className: \"crud-btn\",\n      onClick: handleLogin,\n      children: \"Login\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 42,\n      columnNumber: 7\n    }, this), error && /*#__PURE__*/_jsxDEV(\"p\", {\n      style: {\n        color: 'red'\n      },\n      children: error\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 43,\n      columnNumber: 17\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 36,\n    columnNumber: 5\n  }, this);\n};\n_s(Login, \"5HhxUyJqJakK9CP8ApjHp073XCA=\", false, function () {\n  return [useUser, useNavigate];\n});\n_c = Login;\nexport default Login;\nvar _c;\n$RefreshReg$(_c, \"Login\");","map":{"version":3,"names":["React","useState","axios","useNavigate","useUser","jsxDEV","_jsxDEV","Login","_s","username","setUsername","password","setPassword","error","setError","SetUsername","navigate","handleLogin","response","post","token","data","localStorage","setItem","className","children","fileName","_jsxFileName","lineNumber","columnNumber","type","placeholder","onChange","e","target","value","onClick","style","color","_c","$RefreshReg$"],"sources":["C:/Users/Kunal Londhe/OneDrive/ドキュメント/Development/Web Development/Frontend/meal-planner/Frontend/src/Login.jsx"],"sourcesContent":["import React, { useState } from 'react';\r\nimport axios from 'axios';\r\nimport { useNavigate } from 'react-router-dom'; // Replace useHistory with useNavigate\r\nimport { useUser } from './userContext';\r\n\r\nconst Login = () => {\r\n  const [username, setUsername] = useState('');\r\n  const [password, setPassword] = useState('');\r\n  const [error, setError] = useState(null);\r\n  const { SetUsername } = useUser();\r\n\r\n  // Use the useNavigate hook to access navigation\r\n  const navigate = useNavigate();\r\n\r\n  const handleLogin = async () => {\r\n    try {\r\n      const response = await axios.post('http://localhost:3000/login', { username, password });\r\n      const token = response.data.token;\r\n\r\n      if(token){\r\n        // Store the token securely (e.g., in a cookie or local storage) for future API requests.\r\n      localStorage.setItem('token', token);\r\n      SetUsername(username);\r\n      // Redirect the user to the authenticated part of your app (e.g., the meal planner)\r\n      navigate('/meal-app'); // Use navigate instead of history.push\r\n      }\r\n\r\n      \r\n    } catch (error) {\r\n      // Handle login error\r\n      setError('Login failed. Please check your credentials and try again.');\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div className='signin-card'>\r\n      <h2 className='nav-text'>Login</h2>\r\n      <section  className='input'>\r\n      <input type=\"text\" placeholder=\"👨‍💻: Username\" onChange={(e) => setUsername(e.target.value)} />\r\n      <input type=\"password\" placeholder=\"🔑: Password\" onChange={(e) => setPassword(e.target.value)} />\r\n      </section>\r\n      <button className='crud-btn' onClick={handleLogin}>Login</button>\r\n      {error && <p style={{ color: 'red' }}>{error}</p>}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Login;\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}